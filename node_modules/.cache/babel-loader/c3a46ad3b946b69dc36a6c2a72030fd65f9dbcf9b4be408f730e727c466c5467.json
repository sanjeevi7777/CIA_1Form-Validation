{"ast":null,"code":"var _jsxFileName = \"/home/sanjeevi/Desktop/Hospitalize_React/src/Pages/BookAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PatientNavBar from '../Components/PatientNavBar';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BookAppointment() {\n  _s();\n  // let location =useLocation();\n  const [symptoms, setSymptoms] = useState(\"\");\n  let {\n    patId,\n    id\n  } = useParams();\n  console.log(patId + id);\n  async function bookApp() {\n    alert(\"Appointment booked \");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symptomContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symptomContainerIn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"Symptoms\",\n          children: \" Symptoms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your symptoms\",\n          value: symptoms,\n          onChange: e => setSymptoms(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: bookApp,\n          className: \"btn \",\n          children: \"Book Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BookAppointment, \"8bXugJfxs31yl5dFTtRD7A6wVtY=\", false, function () {\n  return [useParams];\n});\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","PatientNavBar","useParams","useLocation","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BookAppointment","_s","symptoms","setSymptoms","patId","id","console","log","bookApp","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","for","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/sanjeevi/Desktop/Hospitalize_React/src/Pages/BookAppointment.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport PatientNavBar from '../Components/PatientNavBar'\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nfunction BookAppointment() {\n  // let location =useLocation();\n  const [symptoms, setSymptoms] = useState(\"\")\n  let { patId, id } = useParams();\n  console.log(patId + id)\n  async function bookApp() {\n    alert(\"Appointment booked \")\n  }\n  return (\n    <>\n      <PatientNavBar />\n      <div className=\"symptomContainer\">\n        <div className=\"symptomContainerIn\">\n          <label for=\"Symptoms\"> Symptoms</label>\n          <input type='text' placeholder='Enter your symptoms' value={symptoms} onChange={(e) => setSymptoms(e.target.value)}></input>\n          <button onClick={bookApp} className='btn '>Book Appointment</button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default BookAppointment"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAI;IAAEa,KAAK;IAAEC;EAAG,CAAC,GAAGZ,SAAS,EAAE;EAC/Ba,OAAO,CAACC,GAAG,CAACH,KAAK,GAAGC,EAAE,CAAC;EACvB,eAAeG,OAAOA,CAAA,EAAG;IACvBC,KAAK,CAAC,qBAAqB,CAAC;EAC9B;EACA,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACL,aAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjBjB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAL,QAAA,eAC/Bb,OAAA;QAAKkB,SAAS,EAAC,oBAAoB;QAAAL,QAAA,gBACjCb,OAAA;UAAOmB,GAAG,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACvCjB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,qBAAqB;UAACC,KAAK,EAAEjB,QAAS;UAACkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC5HjB,OAAA;UAAQ0B,OAAO,EAAEf,OAAQ;UAACO,SAAS,EAAC,MAAM;UAAAL,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA,gBACL;AAEP;AAACb,EAAA,CApBQD,eAAe;EAAA,QAGFP,SAAS;AAAA;AAAA+B,EAAA,GAHtBxB,eAAe;AAsBxB,eAAeA,eAAe;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}